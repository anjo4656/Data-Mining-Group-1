<?xml version="1.0" encoding="UTF-8"?><process version="9.10.000">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.10.000" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="read_csv" compatibility="9.10.000" expanded="true" height="68" name="fb friends" width="90" x="45" y="34">
        <parameter key="csv_file" value="/home/hipcrip/studier/project/data/fb_friends.csv"/>
        <parameter key="column_separators" value=","/>
        <parameter key="trim_lines" value="false"/>
        <parameter key="use_quotes" value="true"/>
        <parameter key="quotes_character" value="&quot;"/>
        <parameter key="escape_character" value="\"/>
        <parameter key="skip_comments" value="true"/>
        <parameter key="comment_characters" value="#"/>
        <parameter key="starting_row" value="1"/>
        <parameter key="parse_numbers" value="true"/>
        <parameter key="decimal_character" value="."/>
        <parameter key="grouped_digits" value="false"/>
        <parameter key="grouping_character" value=","/>
        <parameter key="infinity_representation" value=""/>
        <parameter key="date_format" value=""/>
        <parameter key="first_row_as_names" value="true"/>
        <list key="annotations"/>
        <parameter key="time_zone" value="SYSTEM"/>
        <parameter key="locale" value="English (United States)"/>
        <parameter key="encoding" value="UTF-8"/>
        <parameter key="read_all_values_as_polynominal" value="false"/>
        <list key="data_set_meta_data_information">
          <parameter key="0" value="user_a.true.integer.attribute"/>
          <parameter key="1" value="user_b.true.integer.attribute"/>
        </list>
        <parameter key="read_not_matching_values_as_missings" value="false"/>
      </operator>
      <operator activated="true" class="multiply" compatibility="9.10.000" expanded="true" height="103" name="Multiply" width="90" x="179" y="34"/>
      <operator activated="true" class="read_csv" compatibility="9.10.000" expanded="true" height="68" name="gender" width="90" x="45" y="136">
        <parameter key="csv_file" value="/home/hipcrip/studier/project/data/genders.csv"/>
        <parameter key="column_separators" value=","/>
        <parameter key="trim_lines" value="false"/>
        <parameter key="use_quotes" value="true"/>
        <parameter key="quotes_character" value="&quot;"/>
        <parameter key="escape_character" value="\"/>
        <parameter key="skip_comments" value="true"/>
        <parameter key="comment_characters" value="#"/>
        <parameter key="starting_row" value="1"/>
        <parameter key="parse_numbers" value="true"/>
        <parameter key="decimal_character" value="."/>
        <parameter key="grouped_digits" value="false"/>
        <parameter key="grouping_character" value=","/>
        <parameter key="infinity_representation" value=""/>
        <parameter key="date_format" value=""/>
        <parameter key="first_row_as_names" value="true"/>
        <list key="annotations"/>
        <parameter key="time_zone" value="SYSTEM"/>
        <parameter key="locale" value="English (United States)"/>
        <parameter key="encoding" value="UTF-8"/>
        <parameter key="read_all_values_as_polynominal" value="false"/>
        <list key="data_set_meta_data_information">
          <parameter key="0" value="user.true.integer.attribute"/>
          <parameter key="1" value="female.true.integer.attribute"/>
        </list>
        <parameter key="read_not_matching_values_as_missings" value="false"/>
      </operator>
      <operator activated="true" class="multiply" compatibility="9.10.000" expanded="true" height="103" name="Multiply (2)" width="90" x="179" y="136"/>
      <operator activated="true" class="read_csv" compatibility="9.10.000" expanded="true" height="68" name="bt" width="90" x="45" y="238">
        <parameter key="csv_file" value="/home/hipcrip/studier/project/data/bt_symmetric.csv"/>
        <parameter key="column_separators" value=","/>
        <parameter key="trim_lines" value="false"/>
        <parameter key="use_quotes" value="true"/>
        <parameter key="quotes_character" value="&quot;"/>
        <parameter key="escape_character" value="\"/>
        <parameter key="skip_comments" value="true"/>
        <parameter key="comment_characters" value="#"/>
        <parameter key="starting_row" value="1"/>
        <parameter key="parse_numbers" value="true"/>
        <parameter key="decimal_character" value="."/>
        <parameter key="grouped_digits" value="false"/>
        <parameter key="grouping_character" value=","/>
        <parameter key="infinity_representation" value=""/>
        <parameter key="date_format" value=""/>
        <parameter key="first_row_as_names" value="true"/>
        <list key="annotations"/>
        <parameter key="time_zone" value="SYSTEM"/>
        <parameter key="locale" value="English (United States)"/>
        <parameter key="encoding" value="UTF-8"/>
        <parameter key="read_all_values_as_polynominal" value="false"/>
        <list key="data_set_meta_data_information">
          <parameter key="0" value="timestamp.true.integer.attribute"/>
          <parameter key="1" value="user_a.true.integer.attribute"/>
          <parameter key="2" value="user_b.true.integer.attribute"/>
          <parameter key="3" value="rssi.true.integer.attribute"/>
        </list>
        <parameter key="read_not_matching_values_as_missings" value="false"/>
      </operator>
      <operator activated="true" class="multiply" compatibility="9.10.000" expanded="true" height="103" name="Multiply (3)" width="90" x="179" y="238"/>
      <operator activated="true" class="read_csv" compatibility="9.10.000" expanded="true" height="68" name="sms" width="90" x="45" y="340">
        <parameter key="csv_file" value="/home/hipcrip/studier/project/data/sms.csv"/>
        <parameter key="column_separators" value=","/>
        <parameter key="trim_lines" value="false"/>
        <parameter key="use_quotes" value="true"/>
        <parameter key="quotes_character" value="&quot;"/>
        <parameter key="escape_character" value="\"/>
        <parameter key="skip_comments" value="true"/>
        <parameter key="comment_characters" value="#"/>
        <parameter key="starting_row" value="1"/>
        <parameter key="parse_numbers" value="true"/>
        <parameter key="decimal_character" value="."/>
        <parameter key="grouped_digits" value="false"/>
        <parameter key="grouping_character" value=","/>
        <parameter key="infinity_representation" value=""/>
        <parameter key="date_format" value=""/>
        <parameter key="first_row_as_names" value="true"/>
        <list key="annotations"/>
        <parameter key="time_zone" value="SYSTEM"/>
        <parameter key="locale" value="English (United States)"/>
        <parameter key="encoding" value="UTF-8"/>
        <parameter key="read_all_values_as_polynominal" value="false"/>
        <list key="data_set_meta_data_information">
          <parameter key="0" value="timestamp.true.integer.attribute"/>
          <parameter key="1" value="sender.true.integer.attribute"/>
          <parameter key="2" value="recipient.true.integer.attribute"/>
        </list>
        <parameter key="read_not_matching_values_as_missings" value="false"/>
      </operator>
      <operator activated="true" class="multiply" compatibility="9.10.000" expanded="true" height="103" name="Multiply (4)" width="90" x="179" y="340"/>
      <operator activated="true" class="read_csv" compatibility="9.10.000" expanded="true" height="68" name="calls" width="90" x="45" y="442">
        <parameter key="csv_file" value="/home/hipcrip/studier/project/data/calls.csv"/>
        <parameter key="column_separators" value=","/>
        <parameter key="trim_lines" value="false"/>
        <parameter key="use_quotes" value="true"/>
        <parameter key="quotes_character" value="&quot;"/>
        <parameter key="escape_character" value="\"/>
        <parameter key="skip_comments" value="true"/>
        <parameter key="comment_characters" value="#"/>
        <parameter key="starting_row" value="1"/>
        <parameter key="parse_numbers" value="true"/>
        <parameter key="decimal_character" value="."/>
        <parameter key="grouped_digits" value="false"/>
        <parameter key="grouping_character" value=","/>
        <parameter key="infinity_representation" value=""/>
        <parameter key="date_format" value=""/>
        <parameter key="first_row_as_names" value="true"/>
        <list key="annotations"/>
        <parameter key="time_zone" value="SYSTEM"/>
        <parameter key="locale" value="English (United States)"/>
        <parameter key="encoding" value="UTF-8"/>
        <parameter key="read_all_values_as_polynominal" value="false"/>
        <list key="data_set_meta_data_information">
          <parameter key="0" value="timestamp.true.integer.attribute"/>
          <parameter key="1" value="caller.true.integer.attribute"/>
          <parameter key="2" value="callee.true.integer.attribute"/>
          <parameter key="3" value="duration.true.integer.attribute"/>
        </list>
        <parameter key="read_not_matching_values_as_missings" value="false"/>
      </operator>
      <operator activated="true" class="multiply" compatibility="9.10.000" expanded="true" height="103" name="Multiply (5)" width="90" x="179" y="442"/>
      <operator activated="true" class="python_scripting:execute_python" compatibility="9.10.000" expanded="true" height="187" name="Execute Python" width="90" x="581" y="238">
        <parameter key="script" value="import pandas&#10;&#10;&#10;# Generates an edge list. For each pair of users a and b that have any&#10;# kind of connection, the edge has the following attributes:&#10;# ['user_a', 'user_b', 'fb', 'bt', 'sms', 'calls', 'weight']&#10;#  - fb: 1 if user a and b are facebook friends, 0 otherwise&#10;#  &#10;# TODO: CALCULATE THE REMAINING ATTRIBUTES&#10;def rm_main(fbFriends, gender, bt, sms, calls):&#10;    &#10;    maxID = maxUserID(fbFriends, gender, bt, sms, calls)&#10;&#10;    # A list where edges[i] is a data frame containing&#10;    edges = []&#10;    for user in range(0, maxID):&#10;        c =['user_a', 'user_b', 'fb', 'bt', 'sms', 'calls', 'weight']&#10;        userEdges = pandas.DataFrame(columns = c)&#10;        edges.append(userEdges)&#10;&#10;    fbEdges(fbFriends, edges)&#10;    &#10;    df = edges[0]&#10;    for i in range(1, maxID):&#10;        df = df.append(edges[i], ignore_index=True)&#10;&#10;    return df&#10;&#10;    &#10;# Processes the Facebook friendships. There is a friendship&#10;# between user a and b, the edge between a and b will get +1&#10;# in the fb column&#10;def fbEdges(fbFriends, edges):&#10;    for row in range(0, fbFriends.shape[0]):&#10;        userA = fbFriends.at[row, 'user_a']&#10;        userB = fbFriends.at[row, 'user_b']&#10;&#10;        if (userA == userB):&#10;            continue&#10;&#10;        lesser = min(userA, userB)&#10;        greater = max(userA, userB)&#10;        addEdge(edges, lesser, greater, 'fb', 1)&#10;&#10;&#10;# Adds a relation between two users to edges&#10;#  - If those users already have a connecting edge, the values of the edge are modified. &#10;#    The provided value is added to the correct attribute column of the edge.&#10;#  - Otherwise a new edge is created&#10;#&#10;# EXAMPLE:&#10;# Add edge(a, b, fb, 1) to a set of edges where an edge between a and b&#10;#  - Does not exist: edge (a, b, 1, 0, 0, 0, 0) is added&#10;#  - Exists as (a, b, 0, 2, 3, 4, 5): the existing edge is modified to&#10;#    (a, b, 0+1, 2, 3, 4, 5)&#10;def addEdge(edges, userA, userB, columnLabel, value):&#10;    userEdges = edges[userA]&#10;    rowUserB = userEdges.index[userEdges['user_b']==userB].tolist()&#10;&#10;    if (len(rowUserB) &gt; 0):&#10;        row = rowUserB[0]&#10;        edges[userA].at[row, columnLabel] += value&#10;    else:&#10;        rows = userEdges.shape[0]&#10;        newRow = [userA, userB, 0, 0, 0, 0, 0]&#10;        newRow[labelIndex(columnLabel)] = value&#10;        edges[userA].loc[rows+1] = newRow&#10;      &#10;&#10;# Gets the index of a column in &#10;# ['user_a', 'user_b', 'fb', 'bt' 'sms', 'calls']&#10;def labelIndex(columnLabel):&#10;    if (columnLabel == 'fb'):&#10;        return 2&#10;    elif (columnLabel == 'bt'):&#10;        return 3&#10;    elif (columnLabel == 'sms'):&#10;        return 4&#10;    elif (columnLabel == 'calls'):&#10;        return 5       &#10;    elif (columnLabel == 'weight'):&#10;        return 6        &#10;&#10;&#10;# Gets the maximum user ID among all the data. &#10;def maxUserID(fbFriends, gender, bt, sms, calls):&#10;    maxUserFB = max(fbFriends['user_a'].max(), fbFriends['user_b'].max())&#10;    maxUserGender = gender['user'].max()&#10;    maxUserBT = max(bt['user_a'].max(), bt['user_b'].max())&#10;    maxUserSMS = max(sms['sender'].max(), sms['recipient'].max())&#10;    maxUserCalls = max(calls['caller'].max(), calls['callee'].max())&#10;&#10;    return max(maxUserFB, maxUserGender, maxUserBT, maxUserSMS, maxUserCalls)&#10;&#10;&#10;&#10;&quot;&quot;&quot;&#10;# first test function&#10;def rm_main(gender, fbFriends):&#10;&#10;    users = gender.shape[0]&#10;&#10;    (friendRows, friendColumns) = fbFriends.shape&#10;&#10;    d = {'user': [], 'friends': []}&#10;    df = pandas.DataFrame(data=d)&#10;    df['friends'] = df['friends'].astype('object')&#10;    &#10;&#10;    currentUser = fbFriends.at[0, 'user_a']&#10;    currentFriends = []&#10;    for edge in range(0, friendRows):&#10;        nextUser = fbFriends.at[edge, 'user_a']&#10;        if nextUser != currentUser:&#10;            df.at[currentUser, 'user'] = currentUser&#10;            df.at[currentUser, 'friends'] = currentFriends #copy?&#10;            currentUser = nextUser&#10;            currentFriends = []&#10;            &#10;        currentFriends.append(fbFriends.at[edge, 'user_b'])&#10;&#10;        if edge == friendRows - 1:&#10;            df.at[currentUser, 'user'] = currentUser&#10;            df.at[currentUser, 'friends'] = currentFriends #copy?&#10;&#10;    return df&#10;&quot;&quot;&quot;"/>
        <parameter key="notebook_cell_tag_filter" value=""/>
        <parameter key="use_default_python" value="true"/>
        <parameter key="package_manager" value="conda (anaconda)"/>
        <parameter key="use_macros" value="false"/>
      </operator>
      <connect from_op="fb friends" from_port="output" to_op="Multiply" to_port="input"/>
      <connect from_op="Multiply" from_port="output 1" to_op="Execute Python" to_port="input 1"/>
      <connect from_op="Multiply" from_port="output 2" to_port="result 2"/>
      <connect from_op="gender" from_port="output" to_op="Multiply (2)" to_port="input"/>
      <connect from_op="Multiply (2)" from_port="output 1" to_op="Execute Python" to_port="input 2"/>
      <connect from_op="Multiply (2)" from_port="output 2" to_port="result 3"/>
      <connect from_op="bt" from_port="output" to_op="Multiply (3)" to_port="input"/>
      <connect from_op="Multiply (3)" from_port="output 1" to_op="Execute Python" to_port="input 3"/>
      <connect from_op="Multiply (3)" from_port="output 2" to_port="result 4"/>
      <connect from_op="sms" from_port="output" to_op="Multiply (4)" to_port="input"/>
      <connect from_op="Multiply (4)" from_port="output 1" to_op="Execute Python" to_port="input 4"/>
      <connect from_op="Multiply (4)" from_port="output 2" to_port="result 5"/>
      <connect from_op="calls" from_port="output" to_op="Multiply (5)" to_port="input"/>
      <connect from_op="Multiply (5)" from_port="output 1" to_op="Execute Python" to_port="input 5"/>
      <connect from_op="Multiply (5)" from_port="output 2" to_port="result 6"/>
      <connect from_op="Execute Python" from_port="output 1" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <portSpacing port="sink_result 3" spacing="0"/>
      <portSpacing port="sink_result 4" spacing="0"/>
      <portSpacing port="sink_result 5" spacing="0"/>
      <portSpacing port="sink_result 6" spacing="0"/>
      <portSpacing port="sink_result 7" spacing="0"/>
    </process>
  </operator>
</process>
